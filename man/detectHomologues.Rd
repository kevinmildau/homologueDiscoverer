% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detectHomologues.R
\name{detectHomologues}
\alias{detectHomologues}
\title{detectHomologues}
\usage{
detectHomologues(
  peak_table,
  mz_min = NA,
  mz_max = NA,
  rt_min,
  rt_max,
  ppm_tolerance,
  search_mode = NA,
  mz_steps = NA,
  min_series_length = 4,
  step_mode = "increment",
  rel_rt_tolerance_high = 0.6,
  rel_rt_tolerance_low = 0.1,
  progress_counter = 100,
  verbose = T
)
}
\arguments{
\item{peak_table}{A peak table (type tibble) with mz (double), rt (double), and peak_id (int) columns.}

\item{mz_min}{Minimum mz increment for a new peak to be considered (untargeted, absolute value). Must be 0 or larger. Needs to be set for untargeted search mode.}

\item{mz_max}{Maximum mz increment for a new peak to be considered (untargeted, absolute value). Must be mz_min or larger. Needs to be set for untargeted search mode.}

\item{rt_min}{Minimum rt increment for a new peak to be considered. Must be 0 or larger.}

\item{rt_max}{Maximum rt increment for a new peak to be considered. Must be rt_min or larger.}

\item{ppm_tolerance}{Error tolerance in ppm (error relative to last chain node mz + mz step-size).}

\item{search_mode}{"targeted" or "untargeted" determining the search approach.}

\item{mz_steps}{Vector of mz step sizes to be searched around. Needs to be set for targeted search mode.}

\item{min_series_length}{Minimum size of a repetitive series for it to be considered a homologue. The minimum plausible value is 3. Any value below 5 is likely to return spurious results unless ppm constrains are highly rigid.}

\item{step_mode}{"increment" or "decrement" to indicate whether mz steps are to be looked for in an increasing or decreasing mass-to-charge ratio value over retention time fashion.}

\item{rel_rt_tolerance_high}{Value between 0 and 1. Sets the rt tolerance relative to the current rt step of a explored chain. If the chain has only two candidates, the value is used as a symmetric margin. If the chain is length three, rel_rt_tolerance_high is used in conjunction with rel_rt_tolerance_low to create asymmetric retention time margins based on the initialized series rt step trends (monotonically increasing or decreasing; static rt step sizes are accounted for using rel_rt_tolerance_low). Used in findChainCandidates.}

\item{rel_rt_tolerance_low}{Value between 0 and 1. Sets the rt tolerance relative to the current rt step of a explored chain. If the chain has only two candidates it is ignored. If the chain is length three, rel_rt_tolerance_low is used in conjunction with rel_rt_tolerance_high to create asymmetric retention time margins based on the initialized series rt step trends (monotonically increasing or decreasing). rel_rt_tolerance_low sets the rt margin in the opposite direction of the series trend, thus allowing for static rt steps or mild deviation from monotonic trends. Used in findChainCandidates.}

\item{progress_counter}{Controls console update frequency of remaining peaks messages. Default is 100.}

\item{verbose}{Can be used to deactivate progress counter messages in console. Default is TRUE.}
}
\value{
Peak table with additional homologue_id column with integer identifiers for each identified series. An homologue_id of NA indicating no series membership.
}
\description{
Main function that searches a provided peak_table for homologues in the specified mode. A peak table (tibble) is returned with each repetitive series annotated by an integer identifier, NA representing no series membership (all non-homologue).
}
\details{
Main function for homologue detection. Defines outermost while loop over peak table.

Algorithm outline:

While there are peaks in the ordered peak table

--> Use the first indexed peak and provided search parameters to initialize peak chain 2-tuples.

--> If valid chain initialization:

---> Do recursive chain expansion. Using search parameters, expand 2-tuples recursively until no further candidates match the search restrictions.

---> Of all chains created, select longest

---> Eval chain length above min length, if so, declare homologue

---> Remove first indexed peak or all members of the homologue series and repeat.

Homologue series heuristics are built into candidate search, hence no further checks for homologue series trend consistency are done.
}
\examples{
# Targeted Run:
detectHomologues(peak_table, mz_min = NA, mz_max = NA, rt_min, rt_max, ppm_tolerance, search_mode = "targeted", mz_steps = c(14.0156, 44.02628), min_series_length = 5, step_mode = "increment")
# Untargeted Run:
detectHomologues(peak_table, mz_min = 10, mz_max = 20, rt_min, rt_max, ppm_tolerance, search_mode = "untargeted", mz_steps = NA, min_series_length = 5, step_mode = "increment")
}
