% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotateHomologues.R
\name{annotateHomologues}
\alias{annotateHomologues}
\title{annotateHomologues}
\usage{
annotateHomologues(
  peak_table,
  seriesd_db,
  ppm_matching_tolerance,
  ppm_step_tolerance,
  rt_tolerance,
  min_match_length,
  quick_search = TRUE
)
}
\arguments{
\item{peak_table}{A peak table with mz, rt, intensity and peak_id columns. Intensity is not used by the algorithm but is needed for downstream functionality. Additional columns are allowed.}

\item{seriesd_db}{A series_db tibble created with sdbCreate().}

\item{ppm_matching_tolerance}{Tolerance in ppm for matching two peaks.}

\item{ppm_step_tolerance}{Tolerance in ppm relative to largest mz value in homologue series for evaluating matched peaks increment consistency.}

\item{rt_tolerance}{Retention time tolerance in matching. Beware of rt units in the database!}

\item{min_match_length}{Minimum gap free overlap between two homologue series for them to be considered overlapping. Should be >= 3.}

\item{quick_search}{Boolean toggle indicating whether search should be made faster by pre-screening the max intensity peaks of the seriesd_db against the peak_table. If the highest intensity peak of the homologue in series_db is not present in the peak table, then the series itself is also unlikely to be present, allowing for a reduction of the number of peak matching tasks.}
}
\value{
Peak table as a tibble with peaks annotated with homologue_identifiers from series_db using a homologue_id and additional homologue information. If no overlap detected, the input peak_table is returned without modifications.
}
\description{
Function loops through homologue_ids in seriesd_db and checks whether they are contained within the peak table. If contained, the peak table rows are annotated with the corresponding homologue_id from series_db.
}
\details{
annotateHomologues performs overlap checks in multiple stages. First, for any peaks in series_db corresponding to a homologue_id of interest, the closest match in peak_table abiding by ppm_tolerance and rt_tolerance is extracted.
Once all peaks were matched, a second evaluation process extracts the longest gap-free alignment within the matching peaks abiding by a ppm_tolerance in the step size separating each peak. Annotation is only done if there is a gap-free alignment larger than min_match_length. In order to prevent annotation corruption through overwriting, annotation is only allowed if no previous annotation exists for the matched peaks. Multiple series annotations for the same peak may occur as a result of too relaxed matching criteria or through series_db objects composed of multiple runs for which no overlap checks were done.

A quick_search toggle has been introduced to indicate whether a maximum intensity peak pre-screening of the peak table should be performed. The idea behind this heuristic is that if a homologue within series_db is to be contained within the peak table, then it's maximum intensity peak from the series_db should also be present. If not present, the alignment step is skipped for the homologue_id in question.
}
