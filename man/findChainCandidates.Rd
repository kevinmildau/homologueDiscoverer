% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_detectHomologues.R
\name{findChainCandidates}
\alias{findChainCandidates}
\title{findChainCandidates}
\usage{
findChainCandidates(
  chaintb,
  peak_table,
  tolerance,
  rel_rt_tolerance_high,
  rel_rt_tolerance_low
)
}
\arguments{
\item{chaintb}{An initialized chain data frame.}

\item{peak_table}{A matrix version of the peak table with mz (double), rt (double), and peak_id (int) columns.}

\item{tolerance}{Error tolerance in ppm (error relative to last chain node mz + mz stepsize).}

\item{rel_rt_tolerance_high}{Value between 0 and 1. Sets the rt tolerance relative to the current rt step of a explored chain. If the chain has only two candidates, the value is used as a symmetric margin. If the chain is length three, rel_rt_tolerance_high is used in conjunction with rel_rt_tolerance_low to create asymmetric retention time margins based on the initialized series rt step trends (monotonically increasing or decreasing; static rt step sizes are accounted for using rel_rt_tolerance_low). Used in findChainCandidates.}

\item{rel_rt_tolerance_low}{Value between 0 and 1. Sets the rt tolerance relative to the current rt step of a explored chain. If the chain has only two candidates it is ignored. If the chain is length three, rel_rt_tolerance_low is used in conjunction with rel_rt_tolerance_high to create asymmetric retention time margins based on the initialized series rt step trends (monotonically increasing or decreasing). rel_rt_tolerance_low sets the rt margin in the opposite direction of the series trend, thus allowing for static rt steps or mild deviation from monotonic trends. Used in findChainCandidates.}
}
\value{
List of tibbles containing extended chain data frames. If no candidates, returns empty list.
}
\description{
Helper function that extends an chain data frame of two or more peaks (root, first step, second step, etc.) provided there are suitable candidate peaks in the peak table.
}
\details{
Context: Helper function within expandChain that checks for new candidates in peak table at each chain extension step. Reqursion starts after chain initialization with expandChain and this findChainCandidates.

Empty list return is processed in expandChains as no chain extension, keeping the originally supplied data frame. This is done since returning the input data frame would require additional length checks to validate that the chain was grown.
}
\keyword{internal}
